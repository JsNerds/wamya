{"version":3,"sources":["components/back/PaymentsTable.js","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","components/back/CustomersDetails.js","pages/back/Customer.js"],"names":["PaymentsTable","props","history","useHistory","deletePayment","id","a","queryServerApi","err","console","log","go","className","payments","map","payment","index","key","href","title","NameOnCard","Email","Address","City","creditCard","cardType","src","require","width","height","alt","CardTypeImage","CardType","Date","parse","ExpirationDate","now","Math","round","Amount","toFixed","size","variant","color","onClick","_id","reduce","total","item","icon","SwitchBase","React","forwardRef","ref","autoFocus","checkedProp","checked","checkedIcon","classes","defaultChecked","disabledProp","disabled","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value","other","_objectWithoutProperties","_useControlled","useControlled","controlled","default","Boolean","_useControlled2","_slicedToArray","setCheckedState","muiFormControl","useFormControl","hasLabelFor","createElement","IconButton","_extends","component","clsx","root","role","undefined","event","input","newChecked","target","withStyles","padding","cursor","position","opacity","top","left","margin","zIndex","createSvgIcon","d","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","_props$checkedIcon","_props$color","_props$icon","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","_props$size","concat","capitalize","cloneElement","fontSize","theme","palette","text","secondary","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","colorSecondary","CustomersDetails","container","spacing","xs","sm","md","process","customer","img","FirstName","LastName","UserName","PhoneNumber","Adress","Street","ZipCode","lg","length","Customer","useParams","useServerApi","toRender","titleHeading","titleDescription","sectionHeading"],"mappings":"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","file":"static/js/4.4afa6099.chunk.js","sourcesContent":["import React, {Fragment, useEffect, useState} from 'react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport {\r\n    Checkbox,\r\n    Card,\r\n    Button\r\n} from '@material-ui/core';\r\nimport {useHistory} from \"react-router\";\r\nimport {queryServerApi} from \"../../utils/queryServerApi\";\r\n\r\n\r\nexport default function PaymentsTable(props) {\r\n\r\n    const history = useHistory();\r\n\r\n    function total() {\r\n        return props.payments?.reduce(function (total, item){\r\n            total += item.Amount / 100;\r\n            console.log(\"total\", total);\r\n            return total\r\n        },0)\r\n    }\r\n\r\n    const CardTypeImage = (cardType) => {\r\n        switch(cardType) {\r\n            case 'mastercard':\r\n                return <img src={require(\"../../assets/images/mastercard.png\")} width=\"60\" height=\"30\" alt=\"Mastercard\"/>\r\n            case 'visa':\r\n                return <img src={require(\"../../assets/images/visa-512.png\")} width=\"60\" height=\"30\" alt=\"Mastercard\"/>\r\n            case 'discover':\r\n                return <img src={require(\"../../assets/images/discover-credit-debit-card-bank-transaction-32285.png\")} width=\"80\" height=\"50\" alt=\"Mastercard\"/>\r\n            default:\r\n                return <img src=\"../../assets/images/mastercard.png\"/>\r\n        }\r\n    }\r\n\r\n\r\n    const deletePayment = async (id) => {\r\n        const [err] = await queryServerApi(\"payments/remove/\" + id, {}, \"DELETE\");\r\n        if (err) {\r\n            console.log(err);\r\n        } history.go(0);\r\n    };\r\n    return (\r\n        <Fragment>\r\n            <Card className=\"card-box mb-4\">\r\n                <div className=\"card-header\">\r\n                    <div className=\"card-header--title\">\r\n                        <h4 className=\"font-size-lg mb-0 py-2 font-weight-bold\">\r\n                            Operations and Payments\r\n                        </h4>\r\n                    </div>\r\n                </div>\r\n                <div className=\"card-body px-0 pt-2 pb-3\">\r\n                    <table className=\"table table-hover table-borderless table-alternate text-nowrap mb-0\">\r\n                        {}\r\n                        <thead>\r\n                        <tr>\r\n                            <th className=\"text-center\">Customer</th>\r\n                            <th className=\"text-center\">Email</th>\r\n                            <th className=\"text-center\">Address</th>\r\n                            <th className=\"text-center\">Credit Card</th>\r\n                            <th className=\"text-center\">Card Type</th>\r\n                            <th className=\"text-center\">Expiration Date</th>\r\n                            <th className=\"text-center\">Amount</th>\r\n                            <th className=\"text-right\">Actions</th>\r\n                            <th className=\"text-right\">Totals</th>\r\n\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n\r\n                        {props.payments?.map((payment,index) => (\r\n                        <tr key={index}>\r\n                            <td>\r\n                                <div className=\"d-flex\">\r\n                                    <Checkbox className=\"align-self-center mr-3\" />\r\n                                    <div>\r\n                                        <a\r\n                                            href=\"#/\"\r\n                                            className=\"font-weight-bold text-black\"\r\n                                            title=\"...\">\r\n                                            {payment.NameOnCard}\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </td>\r\n                            <td className=\"text-center\">\r\n                                <span className=\"font-weight-bold\">{payment.Email}</span>\r\n                            </td>\r\n                            <td className=\"text-center\">\r\n                                <span className=\"font-weight-bold\">{payment.Address.City}</span>\r\n                            </td>\r\n\r\n                            <td className=\"text-center\">\r\n                                <span className=\"font-weight-bold\"> **** **** **** {payment.creditCard}</span>\r\n                            </td>\r\n\r\n                            <td className=\"text-center\">\r\n                                <span >{CardTypeImage(payment.CardType)}</span>\r\n                            </td>\r\n\r\n                            {Date.parse(payment.ExpirationDate) > Date.now() ? (\r\n                                    <td className=\"text-center\">\r\n                                        <div className=\"badge badge-success px-4\">unexpired</div>\r\n                                    </td>\r\n                                ):\r\n                                <td className=\"text-center\">\r\n                                    <div className=\"badge badge-danger px-4\">Expired</div>\r\n                                </td>\r\n                            }\r\n\r\n\r\n                            <td className=\"text-right\">\r\n                                <div className=\"d-flex align-items-center justify-content-end\">\r\n                                    <div className=\"font-weight-bold font-size-lg pr-2\">\r\n                                        {' '}\r\n                                        {Math.round(payment.Amount.toFixed(2) /100)}TND\r\n                                    </div>\r\n                                </div>\r\n                            </td>\r\n\r\n                            <td className=\"text-center\">\r\n                                <Button size=\"small\" variant=\"contained\" color=\"secondary\" onClick={()=> deletePayment(payment._id)}>\r\n                                    Delete\r\n                                </Button>\r\n                            </td>\r\n\r\n                        </tr>))}\r\n\r\n\r\n\r\n                        <tr>\r\n                            <td>\r\n\r\n                            </td>\r\n                            <td className=\"text-center\">\r\n                            </td>\r\n                            <td className=\"text-center\">\r\n                            </td>\r\n                            <td className=\"text-center\">\r\n                            </td>\r\n                            <td className=\"text-center\">\r\n                            </td>\r\n                            <td className=\"text-center\">\r\n                            </td>\r\n                            <td className=\"text-center\">\r\n                            </td>\r\n                            <td className=\"text-center\">\r\n                            </td>\r\n                            <td className=\"text-right\">\r\n                                <div className=\"d-flex align-items-center justify-content-end\">\r\n                                    <div className=\"font-weight-bold font-size-lg pr-2\">\r\n                                        {' '}\r\n                                        {total()} TND\r\n                                    </div>\r\n                                    <FontAwesomeIcon\r\n                                        icon={['fas', 'arrow-up']}\r\n                                        className=\"font-size-sm opacity-5\"\r\n                                    />\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <div className=\"divider mb-3\" />\r\n                    <div className=\"text-center\">\r\n                        <Button color=\"primary\">\r\n                            <span className=\"btn-wrapper--label\">View details</span>\r\n                            <span className=\"btn-wrapper--icon\">\r\n                <FontAwesomeIcon icon={['fas', 'chevron-right']} />\r\n              </span>\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Card>\r\n        </Fragment>\r\n    );\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = React.createElement(CheckBoxIcon, null);\nvar defaultIcon = React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  return React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: React.cloneElement(indeterminate ? indeterminateIcon : icon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: React.cloneElement(indeterminate ? indeterminateIcon : checkedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import React, { Fragment } from 'react';\r\n\r\nimport {Grid, Card, CardContent, Button, List, ListItem, LinearProgress} from '@material-ui/core';\r\n\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nexport default function CustomersDetails(props) {\r\n\r\n    function total(payments) {\r\n        return payments.reduce(function (total, item){\r\n            console.log(\"amount\",payments[0])\r\n            total +=  item?.Amount/100;\r\n\r\n            return total\r\n        },0)\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <Grid container spacing={4}>\r\n                <Grid item xs={12} sm={6} md={4}>\r\n                    <Card className=\"mb-4\">\r\n                        <img alt=\"...\" className=\"card-img-top\" src={process.env.REACT_APP_API_URL_UPLOADS + \"/\" + props.customer.img} />\r\n                        <CardContent className=\"p-3\">\r\n                            <h5 className=\"card-title font-weight-bold font-size-lg\">\r\n                                {props.customer.FirstName} {props.customer.LastName}\r\n                            </h5>\r\n                            <p className=\"card-text\">\r\n                                <strong>Username : </strong> {props.customer.UserName}\r\n                            </p>\r\n                            <p className=\"card-text\">\r\n                                <strong>Email : </strong> {props.customer.Email}\r\n                            </p>\r\n                            <p className=\"card-text\">\r\n                                <strong>Phone Number : </strong> {props.customer.PhoneNumber}\r\n                            </p>\r\n                            <p className=\"card-text\">\r\n                                <strong>Address : </strong> <br/>\r\n                                Street : {props.customer.Adress.Street} <br/>\r\n                                City : {props.customer.Adress.City} <br/>\r\n                                ZipCode : {props.customer.Adress.ZipCode} <br/>\r\n                            </p>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n\r\n\r\n\r\n                <Grid item xs={12} lg={6}>\r\n                    <Card className=\"card-box mb-4\">\r\n                        <div className=\"card-header\">\r\n                            <div className=\"card-header--title\">\r\n                                <small className=\"d-block text-uppercase mt-1\">Progress</small>\r\n                                <b>Customer Analytics</b>\r\n                            </div>\r\n                            <div className=\"card-header--actions\">\r\n                                <div className=\"badge badge-warning\">Pending</div>\r\n                            </div>\r\n                        </div>\r\n                        <List>\r\n                            <ListItem className=\"d-block\">\r\n                                <div className=\"align-box-row\">\r\n                                    <div className=\"flex-grow-1\">\r\n                                        <LinearProgress\r\n                                            color=\"secondary\"\r\n                                            variant=\"determinate\"\r\n                                            value={props.customer.payments.length}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"line-height-sm text-center ml-4\">\r\n                                        <small className=\"text-black-50 d-block text-uppercase\">\r\n                                            Number of Payments\r\n                                        </small>\r\n                                        <b className=\"font-size-lg text-success\">\r\n                                            <small className=\"pr-1 text-black-50\"></small>\r\n                                            {props.customer.payments.length}\r\n                                        </b>\r\n                                    </div>\r\n                                </div>\r\n                            </ListItem>\r\n                            <ListItem className=\"d-block\">\r\n                                <div className=\"align-box-row\">\r\n                                    <div className=\"flex-grow-1\">\r\n                                        <LinearProgress\r\n                                            variant=\"determinate\"\r\n                                            color=\"primary\"\r\n                                            value={total(props.customer.payments)/10}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"line-height-sm text-center ml-4\">\r\n                                        <small className=\"text-black-50 d-block text-uppercase\">\r\n                                            Totals Amounts\r\n                                        </small>\r\n                                        <b className=\"font-size-lg text-info\">\r\n                                            <small className=\"text-black-50 pr-1\">TND</small>\r\n                                            {total(props.customer.payments)}\r\n                                        </b>\r\n                                    </div>\r\n                                </div>\r\n                            </ListItem>\r\n                            <ListItem className=\"d-block\">\r\n                                <div className=\"align-box-row\">\r\n                                    <div className=\"flex-grow-1\">\r\n                                        <LinearProgress\r\n                                            color=\"primary\"\r\n                                            variant=\"determinate\"\r\n                                            value={29}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"line-height-sm text-center ml-4\">\r\n                                        <small className=\"text-black-50 d-block text-uppercase\">\r\n                                            Totals\r\n                                        </small>\r\n                                        <b className=\"font-size-lg text-danger\">\r\n                                            <small className=\"text-black-50 pr-1\">$</small>\r\n                                            8,493\r\n                                        </b>\r\n                                    </div>\r\n                                </div>\r\n                            </ListItem>\r\n                            <ListItem className=\"d-block\">\r\n                                <div className=\"align-box-row\">\r\n                                    <div className=\"flex-grow-1\">\r\n                                        <LinearProgress\r\n                                            color=\"secondary\"\r\n                                            variant=\"determinate\"\r\n                                            value={38}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"line-height-sm text-center ml-4\">\r\n                                        <small className=\"text-black-50 d-block text-uppercase\">\r\n                                            Totals\r\n                                        </small>\r\n                                        <b className=\"font-size-lg text-warning\">\r\n                                            <small className=\"text-black-50 pr-1\">$</small>\r\n                                            2,594\r\n                                        </b>\r\n                                    </div>\r\n                                </div>\r\n                            </ListItem>\r\n                        </List>\r\n                        <div className=\"card-footer bg-light text-center\">\r\n                            <Button variant=\"contained\" color=\"primary\">\r\n                <span className=\"btn-wrapper--icon\">\r\n                  <FontAwesomeIcon icon={['far', 'question-circle']} />\r\n                </span>\r\n                                <span className=\"btn-wrapper--label\">Generate reports</span>\r\n                            </Button>\r\n                        </div>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n        </Fragment>\r\n    );\r\n}\r\n","import React, { Fragment } from 'react';\r\n\r\nimport { PageTitle } from '../../layout-componentsBack';\r\n\r\nimport { ExampleWrapperSeamless } from '../../layout-componentsBack';\r\nimport CustomersDetails from \"../../components/back/CustomersDetails\";\r\nimport {useServerApi} from \"../../hooks/useServerApi\";\r\nimport {useParams} from \"react-router\";\r\nimport PaymentsTable from \"../../components/back/PaymentsTable\";\r\nexport default function Customer() {\r\n\r\n    const {id} = useParams();\r\n    const [customer, err, reload] = useServerApi(\"customers/\"+id);\r\n    const toRender = customer;\r\n  return (\r\n    <Fragment>\r\n      <PageTitle\r\n        titleHeading=\"Customer Details\"\r\n        titleDescription=\"the cusromer's details : his payments and informations\"\r\n      />\r\n\r\n        <ExampleWrapperSeamless sectionHeading=\"Customer's informations\">\r\n          {toRender ?\r\n              (   <>\r\n\r\n                  <CustomersDetails customer={toRender}/>\r\n\r\n                      <PaymentsTable payments={customer.payments}/>\r\n                  </>\r\n              ) : (<p>Product not found</p>)}\r\n\r\n              </ExampleWrapperSeamless>\r\n    </Fragment>\r\n  );\r\n}\r\n"],"sourceRoot":""}