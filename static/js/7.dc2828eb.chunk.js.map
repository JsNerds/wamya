{"version":3,"sources":["../node_modules/@material-ui/icons/Visibility.js","../node_modules/@material-ui/icons/VisibilityOff.js","components/back/VehiculeForm.js","pages/back/addVehicule.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","Fragment","fill","useStyles","makeStyles","theme","root","display","flexWrap","margin","spacing","withoutLabel","marginTop","textField","width","LivePreviewExample","classes","React","useState","amount","password","weight","weightRange","showPassword","values","setValues","handleChange","prop","event","target","handleClickShowPassword","handleMouseDownPassword","preventDefault","Grid","container","item","xs","lg","Card","className","Divider","TextField","label","id","clsx","InputProps","startAdornment","InputAdornment","position","FormControl","Input","onChange","endAdornment","aria-describedby","inputProps","FormHelperText","InputLabel","htmlFor","type","IconButton","aria-label","onClick","onMouseDown","fullWidth","variant","FilledInput","edge","OutlinedInput","labelWidth","Vehicules","titleHeading","titleDescription","VehiculeForm"],"mappings":"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","file":"static/js/7.dc2828eb.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"m0 0h24v24H0z\"\n}), _react.default.createElement(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n})), 'VisibilityOff');\n\nexports.default = _default;","import React, { Fragment } from \"react\";\r\n\r\nimport clsx from \"clsx\";\r\n\r\nimport {\r\n  Grid,\r\n  Input,\r\n  InputLabel,\r\n  InputAdornment,\r\n  IconButton,\r\n  Card,\r\n  TextField,\r\n  FormControl,\r\n  FormHelperText,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport FilledInput from \"@material-ui/core/FilledInput\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  withoutLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  textField: {\r\n    width: 200,\r\n  },\r\n}));\r\n\r\nconst LivePreviewExample = () => {\r\n  const classes = useStyles();\r\n\r\n  const [values, setValues] = React.useState({\r\n    amount: \"\",\r\n    password: \"\",\r\n    weight: \"\",\r\n    weightRange: \"\",\r\n    showPassword: false,\r\n  });\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12} lg={6}>\r\n          <Card className=\"p-4 mb-4\">\r\n            <div className=\"font-size-lg font-weight-bold\">Add vehicle</div>\r\n            <Divider className=\"my-4\" />\r\n            <div>\r\n              <TextField\r\n                label=\"With normal TextField\"\r\n                id=\"standard-start-adornment\"\r\n                className={clsx(classes.margin, classes.textField)}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">Kg</InputAdornment>\r\n                  ),\r\n                }}\r\n              />\r\n              <FormControl\r\n                className={clsx(\r\n                  classes.margin,\r\n                  classes.withoutLabel,\r\n                  classes.textField\r\n                )}\r\n              >\r\n                <Input\r\n                  id=\"standard-adornment-weight\"\r\n                  value={values.weight}\r\n                  onChange={handleChange(\"weight\")}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">Kg</InputAdornment>\r\n                  }\r\n                  aria-describedby=\"standard-weight-helper-text\"\r\n                  inputProps={{\r\n                    \"aria-label\": \"weight\",\r\n                  }}\r\n                />\r\n                <FormHelperText id=\"standard-weight-helper-text\">\r\n                  Weight\r\n                </FormHelperText>\r\n              </FormControl>\r\n              <FormControl className={clsx(classes.margin, classes.textField)}>\r\n                <InputLabel htmlFor=\"standard-adornment-password\">\r\n                  Password\r\n                </InputLabel>\r\n                <Input\r\n                  id=\"standard-adornment-password\"\r\n                  type={values.showPassword ? \"text\" : \"password\"}\r\n                  value={values.password}\r\n                  onChange={handleChange(\"password\")}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        onClick={handleClickShowPassword}\r\n                        onMouseDown={handleMouseDownPassword}\r\n                      >\r\n                        {values.showPassword ? (\r\n                          <Visibility />\r\n                        ) : (\r\n                          <VisibilityOff />\r\n                        )}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                />\r\n              </FormControl>\r\n              <FormControl fullWidth className={classes.margin}>\r\n                <InputLabel htmlFor=\"standard-adornment-amount\">\r\n                  Amount\r\n                </InputLabel>\r\n                <Input\r\n                  id=\"standard-adornment-amount\"\r\n                  value={values.amount}\r\n                  onChange={handleChange(\"amount\")}\r\n                  startAdornment={\r\n                    <InputAdornment position=\"start\">$</InputAdornment>\r\n                  }\r\n                />\r\n              </FormControl>\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                label=\"With normal TextField\"\r\n                id=\"filled-start-adornment\"\r\n                className={clsx(classes.margin, classes.textField)}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">Kg</InputAdornment>\r\n                  ),\r\n                }}\r\n                variant=\"filled\"\r\n              />\r\n              <FormControl\r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"filled\"\r\n              >\r\n                <FilledInput\r\n                  id=\"filled-adornment-weight\"\r\n                  value={values.weight}\r\n                  onChange={handleChange(\"weight\")}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">Kg</InputAdornment>\r\n                  }\r\n                  aria-describedby=\"filled-weight-helper-text\"\r\n                  inputProps={{\r\n                    \"aria-label\": \"weight\",\r\n                  }}\r\n                />\r\n                <FormHelperText id=\"filled-weight-helper-text\">\r\n                  Weight\r\n                </FormHelperText>\r\n              </FormControl>\r\n              <FormControl\r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"filled\"\r\n              >\r\n                <InputLabel htmlFor=\"filled-adornment-password\">\r\n                  Password\r\n                </InputLabel>\r\n                <FilledInput\r\n                  id=\"filled-adornment-password\"\r\n                  type={values.showPassword ? \"text\" : \"password\"}\r\n                  value={values.password}\r\n                  onChange={handleChange(\"password\")}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        onClick={handleClickShowPassword}\r\n                        onMouseDown={handleMouseDownPassword}\r\n                        edge=\"end\"\r\n                      >\r\n                        {values.showPassword ? (\r\n                          <Visibility />\r\n                        ) : (\r\n                          <VisibilityOff />\r\n                        )}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                />\r\n              </FormControl>\r\n              <FormControl\r\n                fullWidth\r\n                className={classes.margin}\r\n                variant=\"filled\"\r\n              >\r\n                <InputLabel htmlFor=\"filled-adornment-amount\">\r\n                  Amount\r\n                </InputLabel>\r\n                <FilledInput\r\n                  id=\"filled-adornment-amount\"\r\n                  value={values.amount}\r\n                  onChange={handleChange(\"amount\")}\r\n                  startAdornment={\r\n                    <InputAdornment position=\"start\">$</InputAdornment>\r\n                  }\r\n                />\r\n              </FormControl>\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                label=\"With normal TextField\"\r\n                id=\"outlined-start-adornment\"\r\n                className={clsx(classes.margin, classes.textField)}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">Kg</InputAdornment>\r\n                  ),\r\n                }}\r\n                variant=\"outlined\"\r\n              />\r\n              <FormControl\r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\"\r\n              >\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-weight\"\r\n                  value={values.weight}\r\n                  onChange={handleChange(\"weight\")}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">Kg</InputAdornment>\r\n                  }\r\n                  aria-describedby=\"outlined-weight-helper-text\"\r\n                  inputProps={{\r\n                    \"aria-label\": \"weight\",\r\n                  }}\r\n                  labelWidth={0}\r\n                />\r\n                <FormHelperText id=\"outlined-weight-helper-text\">\r\n                  Weight\r\n                </FormHelperText>\r\n              </FormControl>\r\n              <FormControl\r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\"\r\n              >\r\n                <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                  Password\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-password\"\r\n                  type={values.showPassword ? \"text\" : \"password\"}\r\n                  value={values.password}\r\n                  onChange={handleChange(\"password\")}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        onClick={handleClickShowPassword}\r\n                        onMouseDown={handleMouseDownPassword}\r\n                        edge=\"end\"\r\n                      >\r\n                        {values.showPassword ? (\r\n                          <Visibility />\r\n                        ) : (\r\n                          <VisibilityOff />\r\n                        )}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  labelWidth={70}\r\n                />\r\n              </FormControl>\r\n              <FormControl\r\n                fullWidth\r\n                className={classes.margin}\r\n                variant=\"outlined\"\r\n              >\r\n                <InputLabel htmlFor=\"outlined-adornment-amount\">\r\n                  Amount\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-amount\"\r\n                  value={values.amount}\r\n                  onChange={handleChange(\"amount\")}\r\n                  startAdornment={\r\n                    <InputAdornment position=\"start\">$</InputAdornment>\r\n                  }\r\n                  labelWidth={60}\r\n                />\r\n              </FormControl>\r\n            </div>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default LivePreviewExample;\r\n","import React, { Fragment } from \"react\";\r\n\r\nimport { PageTitle } from \"../../layout-componentsBack\";\r\n\r\nimport VehiculeForm from \"../../components/back/VehiculeForm\";\r\nexport default function Vehicules() {\r\n  return (\r\n    <Fragment>\r\n      <PageTitle\r\n        titleHeading=\"add a vehicule\"\r\n        titleDescription=\"Specify Vehicule details\"\r\n      />\r\n      <VehiculeForm />\r\n    </Fragment>\r\n  );\r\n}\r\n"],"sourceRoot":""}