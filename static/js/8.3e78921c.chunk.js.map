{"version":3,"sources":["components/back/CustomersCharts.js","components/back/CustomerStat.js","components/back/Simulation.js","components/back/PackageDashBoard.js","pages/back/AdminDashboard.js"],"names":["CustomersCharts","props","series","name","data","customers","reduce","total","item","payments","length","deliveries","options","xaxis","categories","type","CustomerStat","Grid","container","spacing","xs","md","Card","className","CardContent","Divider","sectionHeading","Simulation","useState","state","setState","AddDelivery","axios","post","customer","driver","package","Name","dimension","Length","Height","Width","note","weight","sourceAddress","Street","City","ZipCode","Location","Latitude","Longitude","destinationAddress","location","CustomerModel","then","response","console","log","Math","floor","random","error","useEffect","interval","setInterval","clearInterval","onClick","PackageDashBoard","useHistory","username","localStorage","getItem","started","setStarted","setConnected","deliveryList","setDeliveryList","getAllDeliveriesForCustomer","a","get","doc","JSON","stringify","message","changeStarted","sm","nb","deliv","icon","toFixed","AdminDashborad","setCustomers","getCustomers","titleHeading","titleDescription"],"mappings":"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","file":"static/js/8.3e78921c.chunk.js","sourcesContent":["import React, {Fragment, useEffect} from 'react';\r\n\r\nimport Chart from 'react-apexcharts';\r\n\r\nexport default function CustomersCharts(props) {\r\n\r\n    const options = {\r\n        xaxis: {\r\n            categories: ['debut', 'Now']\r\n        }\r\n    };\r\n\r\n\r\n\r\n    function totalPayments() {\r\n        return props.customers.reduce(function(total, item) {\r\n            total += item?.payments.length;\r\n            return total;\r\n        }, 0);\r\n    }\r\n\r\n\r\n    function totalDeliveries() {\r\n        return props.customers.reduce(function(total, item) {\r\n            total += item?.deliveries.length;\r\n\r\n            return total;\r\n        }, 0);\r\n    }\r\n\r\n    let series = [\r\n        {\r\n            name: 'Payments',\r\n            data: [0,totalPayments()]\r\n        },\r\n        {\r\n            name: 'Deliveries',\r\n            data: [0,totalDeliveries()]\r\n        }\r\n\r\n    ];\r\n\r\n    return (\r\n        <Fragment>\r\n            <Chart options={options} series={series} type=\"area\" />\r\n        </Fragment>\r\n    );\r\n}\r\n","import React, {Fragment} from 'react';\r\nimport { Grid, Card, CardContent, Divider } from '@material-ui/core';\r\nimport {ExampleWrapperSimple} from \"../../layout-componentsBack\";\r\nimport ApexChartsArea from \"../../componentsBack/ApexCharts/ApexChartsArea\";\r\nimport CustomersCharts from \"./CustomersCharts\";\r\n\r\n\r\n\r\nexport default function CustomerStat(props) {\r\n    const customers = props.customers;\r\n    function totalPayments() {\r\n        return props.customers.reduce(function(total, item) {\r\n            total += item?.payments.length;\r\n\r\n            return total;\r\n        }, 0);\r\n    }\r\n\r\n    function totalDeliveries() {\r\n        return props.customers.reduce(function(total, item) {\r\n            total += item?.deliveries.length;\r\n\r\n            return total;\r\n        }, 0);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <Grid container spacing={4}>\r\n                <Grid item xs={12} md={6}>\r\n                    <Card className=\"card-box mb-4\">\r\n                        <div className=\"card-header\">\r\n                            <h4 className=\"font-size-lg mb-0 py-2 font-weight-bold\">\r\n                                Informations\r\n                            </h4>\r\n                        </div>\r\n                        <CardContent className=\"p-3\">\r\n                            <div className=\"d-flex align-items-center justify-content-between p-3\">\r\n                                <div>\r\n                                    <b>Payments</b>\r\n                                    <div className=\"text-black-50\">Number of customer's payments</div>\r\n                                </div>\r\n                                <div className=\"font-weight-bold text-danger font-size-xl\">\r\n                                    {totalPayments()}\r\n                                </div>\r\n                            </div>\r\n                            <Divider />\r\n                            <div className=\"d-flex align-items-center justify-content-between p-3\">\r\n                                <div>\r\n                                    <b>User</b>\r\n                                    <div className=\"text-black-50\">Number of customers</div>\r\n                                </div>\r\n                                <div className=\"font-weight-bold text-success font-size-xl\">\r\n                                    {props.customers?.length}\r\n                                </div>\r\n                            </div>\r\n                            <Divider />\r\n                            <div className=\"d-flex align-items-center justify-content-between p-3\">\r\n                                <div>\r\n                                    <b>Deliveries</b>\r\n                                    <div className=\"text-black-50\">\r\n                                        Number of customer's deliveries\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"font-weight-bold text-warning font-size-xl\">\r\n                                    {totalDeliveries()}\r\n                                </div>\r\n                            </div>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} md={6}>\r\n                    <ExampleWrapperSimple sectionHeading=\"Stats\">\r\n                        <CustomersCharts customers={props.customers}/>\r\n                    </ExampleWrapperSimple>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </Fragment>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nexport default function Simulation(props) {\r\n  const [simulation, setSimulation] = useState(false);\r\n  const [state, setState] = useState(0);\r\n  const AddDelivery = () => {\r\n      if(state <6)\r\n      {\r\n        axios\r\n        .post(\"https://wamya-backend.herokuapp.com/delivery/startDelivery\", {\r\n          customer: \"608da92e31963732ccb29c21\",\r\n          driver: \"609036b4116dba478453eea2\",\r\n          package: [\r\n            {\r\n              Name: \"yo wassup\",\r\n              dimension: {\r\n                Length: 20,\r\n                Height: 20,\r\n                Width: 20,\r\n              },\r\n              type: \"Dangerous\",\r\n              note: \"hello sir\",\r\n              weight: 20,\r\n            },\r\n          ],\r\n          state: state,\r\n          sourceAddress: {\r\n            Street: \"nahj saidi\",\r\n            City: \"agba\",\r\n            ZipCode: 5000,\r\n            Location: {\r\n              Latitude: 23.0,\r\n              Longitude: 50.0,\r\n            },\r\n          },\r\n          destinationAddress: {\r\n            Street: \"nahj saidi\",\r\n            City: \"agba\",\r\n            ZipCode: 5000,\r\n            Location: {\r\n              Latitude: 23.0,\r\n              Longitude: 50.0,\r\n            },\r\n          },\r\n          location: {\r\n            Latitude: 223.0,\r\n            Longitude: 50.0,\r\n          },\r\n          CustomerModel: \"customer\",\r\n        })\r\n        .then(\r\n          (response) => {\r\n            console.log(response);\r\n            setState( Math.floor(Math.random() * 7) -1)\r\n          },\r\n          (error) => {\r\n            console.log(error);\r\n          }\r\n        );\r\n        \r\n      }\r\n      else\r\n      {\r\n        setState( Math.floor(Math.random() * 6))\r\n      }\r\n    \r\n  };\r\n  // useEffect(() => {\r\n  //     const interval = setInterval(() => {\r\n  //         console.log(\"hi2\");\r\n  //         AddDelivery(state)\r\n  //         if(state < 5)\r\n  //         {\r\n  //             setState(state+1)\r\n  //         }\r\n  //     }, 1000);\r\n  //     return () => clearInterval(interval);\r\n  //   }, []);\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {   \r\n         AddDelivery()\r\n      }, 3000);\r\n      return () => clearInterval(interval); // This is be executed when `loading` state changes\r\n}, [state])\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      onClick={() => {\r\n        AddDelivery()\r\n      }}\r\n    >\r\n      add Delivery\r\n    </button>\r\n  );\r\n}\r\n","import React, {Fragment, useEffect, useState} from 'react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { Grid, Card, CardContent} from '@material-ui/core';\r\n\r\nimport {useHistory} from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nimport Simulation from './Simulation'\r\n\r\n\r\n\r\nexport default function PackageDashBoard() {\r\n\r\n  const history = useHistory();\r\n  const username = localStorage.getItem('username');\r\n  const id = localStorage.getItem('id');\r\n  const role = localStorage.getItem('role');\r\n  const [started,setStarted] = useState(false);\r\n  const [connected,setConnected] = useState(false);\r\n  const [deliveryList,setDeliveryList] = useState([]);\r\n  \r\n  useEffect(()=> {\r\n    if (username === null)\r\n    {\r\n      setConnected(false);\r\n    }\r\n    else {\r\n      setConnected(true);\r\n    }\r\n\r\n  })\r\n\r\n  const Logout = () => {\r\n    localStorage.clear();\r\n    history.go(0);\r\n    history.push(\"/\");\r\n  }\r\n  \r\n\r\n    const getAllDeliveriesForCustomer= async () => {\r\n        try {\r\n          const Delivery = await axios.get(\r\n            \"https://wamya-backend.herokuapp.com/delivery/\"\r\n          ).then(function(doc){\r\n            if(JSON.stringify(doc.data) === JSON.stringify(deliveryList))\r\n            {\r\n              console.log(\"same\")\r\n            }\r\n            else{\r\n              setDeliveryList(doc.data)\r\n              console.log(doc.data);\r\n              console.log(deliveryList);\r\n            }\r\n                \r\n          });\r\n           // set State\r\n        } catch (err) {\r\n          console.error(err.message);\r\n        }\r\n      };\r\n      useEffect(() => {\r\n        getAllDeliveriesForCustomer();\r\n        const interval = setInterval(() => {\r\n          console.log(\"hi\")\r\n            getAllDeliveriesForCustomer();\r\n        }, 2000);\r\n        return () => clearInterval(interval);\r\n      }, []);\r\n\r\n\r\n  const CalculateFinishedDeliveries = () => {\r\n    return deliveryList?.reduce(function(nb, deliv) {\r\n      if (deliv.state === 4 || deliv.state === 5) {\r\n        nb += 1;\r\n      }\r\n      return nb;\r\n    }, 0);\r\n  }\r\n  const CalculateNewDeliveries = () => {\r\n    return deliveryList?.reduce(function(nb, deliv) {\r\n      if (deliv.state === 0) {\r\n        nb += 1;\r\n      }\r\n      return nb;\r\n    }, 0);\r\n  }\r\n  const CalculatePercentageDeliveries = () => {\r\n    var newDeliveries = deliveryList?.reduce(function(nb, deliv) {\r\n      if (deliv.state === 0) {\r\n        nb += 1;\r\n      }\r\n      return nb\r\n    }, 0);\r\n    return (newDeliveries/deliveryList.length*100).toFixed(2);\r\n  }\r\n  const CalculateOnGoingDeliveries = () => {\r\n    return deliveryList?.reduce(function(nb, deliv) {\r\n      if (deliv.state > 0 && deliv.state < 4) {\r\n        nb += 1;\r\n      }\r\n      return nb;\r\n    }, 0);\r\n  }\r\n  const CalculateCanceledDeliveries = () => {\r\n    return deliveryList?.reduce(function(nb, deliv) {\r\n      if (deliv.state === -1) {\r\n        nb += 1;\r\n      }\r\n      return nb;\r\n    }, 0);\r\n  }\r\n\r\n  const chart30Options = {\r\n    chart: {\r\n      toolbar: {\r\n        show: false\r\n      },\r\n      sparkline: {\r\n        enabled: true\r\n      }\r\n    },\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    colors: ['#3c44b1'],\r\n    stroke: {\r\n      color: '#4191ff',\r\n      curve: 'smooth',\r\n      width: 4\r\n    },\r\n    xaxis: {\r\n      crosshairs: {\r\n        width: 1\r\n      }\r\n    },\r\n    yaxis: {\r\n      min: 0\r\n    },\r\n    legend: {\r\n      show: false\r\n    }\r\n  };\r\n  const chart30Data = [\r\n    {\r\n      name: 'Customers',\r\n      data: [47, 38, 56, 24, 45, 54, 38, 47, 38, 56, 24, 56, 24, 65]\r\n    }\r\n  ];\r\n\r\n  const chart31Options = {\r\n    chart: {\r\n      toolbar: {\r\n        show: false\r\n      },\r\n      sparkline: {\r\n        enabled: true\r\n      }\r\n    },\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    colors: ['#f4772e'],\r\n    stroke: {\r\n      color: '#4191ff',\r\n      curve: 'smooth',\r\n      width: 3\r\n    },\r\n    xaxis: {\r\n      crosshairs: {\r\n        width: 1\r\n      }\r\n    },\r\n    yaxis: {\r\n      min: 0\r\n    },\r\n    legend: {\r\n      show: false\r\n    }\r\n  };\r\n  const chart31Data = [\r\n    {\r\n      name: 'Deliveries',\r\n      data: [47, 38, 56, 24, 45, 54, 38, 47, 38, 56, 24, 56, 24, 65]\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Fragment>\r\n       <br/>\r\n       <br/>\r\n       <br/>\r\n       <button type=\"button\" onClick={()=>{setStarted(true)}}> start simulation</button>\r\n       <button type=\"button\" onClick={()=>{setStarted(false)}}>stop simulation</button>\r\n       {started == true ? (<Simulation changeStarted={setStarted}/>) : null}\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12} sm={6} md={3}>\r\n          <Card className=\"card-box bg-premium-dark border-0 text-light mb-4\">\r\n            <CardContent className=\"p-3\">\r\n              <div className=\"d-flex align-items-start\">\r\n                <div className=\"font-weight-bold\">\r\n                  <small className=\"text-white-50 d-block mb-1 text-uppercase\">\r\n                    New Deliveries\r\n                  </small>\r\n                  <span className=\"font-size-xxl mt-1\">{CalculateNewDeliveries()}</span>\r\n                </div>\r\n                <div className=\"ml-auto\">\r\n                  <div className=\"bg-white text-center text-success d-50 rounded-circle d-flex align-items-center justify-content-center\">\r\n                    <FontAwesomeIcon\r\n                      icon={['far', 'chart-bar']}\r\n                      className=\"font-size-xl\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"mt-3\">\r\n                <FontAwesomeIcon\r\n                  icon={['fas', 'arrow-up']}\r\n                  className=\"text-success mr-1\"\r\n                />\r\n                <span className=\"text-success pr-1\">{CalculatePercentageDeliveries()+\"%\"}</span>\r\n                <span className=\"text-white-50\">increase</span>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={12} md={3}>\r\n          <Card className=\"card-box bg-plum-plate text-light mb-4\">\r\n            <CardContent className=\"p-3\">\r\n              <div className=\"d-flex align-items-start\">\r\n                <div className=\"font-weight-bold\">\r\n                  <small className=\"text-white-50 d-block mb-1 text-uppercase\">\r\n                    On Going Deliveries\r\n                  </small>\r\n                  <span className=\"font-size-xxl mt-1\">{CalculateOnGoingDeliveries()}</span>\r\n                </div>\r\n                <div className=\"ml-auto\">\r\n                  <div className=\"bg-white text-center text-primary d-50 rounded-circle d-flex align-items-center justify-content-center\">\r\n                    <FontAwesomeIcon\r\n                      icon={['far', 'chart-bar']}\r\n                      className=\"font-size-xl\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"mt-3\">\r\n                <FontAwesomeIcon\r\n                  icon={['fas', 'arrow-down']}\r\n                  className=\"text-white mr-1\"\r\n                />\r\n                <span className=\"text-red px-1\">15.4%</span>\r\n                <span className=\"text-white-50\">More orders</span>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={3}>\r\n          <Card className=\"card-box bg-midnight-bloom text-light mb-4\">\r\n            <CardContent className=\"p-3\">\r\n              <div className=\"d-flex align-items-start\">\r\n                <div className=\"font-weight-bold\">\r\n                  <small className=\"text-white-50 d-block mb-1 text-uppercase\">\r\n                    Finished Deliveries\r\n                  </small>\r\n                  <span className=\"font-size-xxl mt-1\">{CalculateFinishedDeliveries()}</span>\r\n                </div>\r\n                <div className=\"ml-auto\">\r\n                  <div className=\"bg-white text-center text-primary d-50 rounded-circle d-flex align-items-center justify-content-center\">\r\n                    <FontAwesomeIcon\r\n                      icon={['far', 'lightbulb']}\r\n                      className=\"font-size-xl\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"mt-3\">\r\n                <FontAwesomeIcon\r\n                  icon={['fas', 'arrow-up']}\r\n                  className=\"text-warning mr-1\"\r\n                />\r\n                <span className=\"text-warning pr-1\">7.4%</span>\r\n                <span className=\"text-white-50\">same as before</span>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={3}>\r\n          <Card className=\"card-box bg-premium-dark border-0 text-light mb-4\">\r\n            <CardContent className=\"p-3\">\r\n              <div className=\"d-flex align-items-start\">\r\n                <div className=\"font-weight-bold\">\r\n                  <small className=\"text-white-50 d-block mb-1 text-uppercase\">\r\n                    Canceled Deliveries\r\n                  </small>\r\n                  <span className=\"font-size-xxl mt-1\">{CalculateCanceledDeliveries()}</span>\r\n                </div>\r\n                <div className=\"ml-auto\">\r\n                  <div className=\"bg-white text-center text-success d-50 rounded-circle d-flex align-items-center justify-content-center\">\r\n                    <FontAwesomeIcon\r\n                      icon={['far', 'chart-bar']}\r\n                      className=\"font-size-xl\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"mt-3\">\r\n                <FontAwesomeIcon\r\n                  icon={['fas', 'arrow-up']}\r\n                  className=\"text-success mr-1\"\r\n                />\r\n                <span className=\"text-success pr-1\">15.4%</span>\r\n                <span className=\"text-white-50\">increase this month</span>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, {Fragment, useEffect, useState} from 'react';\r\nimport PackageDashBoard from '../../components/back/PackageDashBoard';\r\n\r\nimport { PageTitle } from '../../layout-componentsBack';\r\nimport CustomerStat from \"../../components/back/CustomerStat\";\r\nimport axios from \"axios\";\r\nexport default function AdminDashborad() {\r\n\r\n    const [customers,setCustomers] = useState([]);\r\n\r\n\r\n    const getCustomers= async () => {\r\n        try {\r\n            const Customers = await axios.get(\r\n                \"https://wamya-backend.herokuapp.com/customers/\"\r\n            ).then(function(doc){\r\n                if(JSON.stringify(doc.data) === JSON.stringify(customers))\r\n                {\r\n                    console.log(\"same\")\r\n                }\r\n                else{\r\n                    setCustomers(doc.data)\r\n                    console.log(doc.data);\r\n                    console.log(customers);\r\n                }\r\n            });\r\n            // set State\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        getCustomers();\r\n        const interval = setInterval(() => {\r\n            getCustomers();\r\n        }, 2000);\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    return (\r\n        <Fragment>\r\n            <PageTitle\r\n                titleHeading=\"Wamya Dashboard\"\r\n                titleDescription=\"Admin Template\"\r\n            />\r\n            <PackageDashBoard/>\r\n            <CustomerStat customers={customers}/>\r\n        </Fragment>\r\n    );\r\n}\r\n"],"sourceRoot":""}