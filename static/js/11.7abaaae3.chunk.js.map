{"version":3,"sources":["components/back/Dm_form.js","pages/back/Adddm.js"],"names":["useStyles","makeStyles","theme","root","display","flexWrap","margin","spacing","withoutLabel","marginTop","textField","width","LivePreviewExample","classes","history","useHistory","useState","setShowLoader","visible","message","setError","React","registrationNumber","model","weightCapacity","trunkDimension","formik","useFormik","initialValues","trunkVolume","onSubmit","values","a","console","log","queryServerApi","err","JSON","stringify","errors","push","Grid","container","item","xs","lg","handleSubmit","Card","className","Divider","FormControl","fullWidth","variant","InputLabel","htmlFor","OutlinedInput","id","name","onChange","handleChange","startAdornment","InputAdornment","position","labelWidth","clsx","type","Input","event","setFieldValue","target","files","image","touched","FormHelperText","error","Button","color","Vehicules","titleHeading","titleDescription"],"mappings":"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","file":"static/js/11.7abaaae3.chunk.js","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport {\r\n  Grid,\r\n  Input,\r\n  InputLabel,\r\n  InputAdornment,\r\n  IconButton,\r\n  Card,\r\n  TextField,\r\n  FormControl,\r\n  FormHelperText,\r\n  Button,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport { useFormik } from \"formik\";\r\nimport { queryServerApi } from \"../../utils/queryServerApi\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  withoutLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  textField: {\r\n    width: 200,\r\n  },\r\n}));\r\n\r\nconst LivePreviewExample = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [showLoader, setShowLoader] = useState(false);\r\n  const [error, setError] = useState({ visible: false, message: \"\" });\r\n  const [markers, setMarkers] = useState([]);\r\n\r\n  const [values, setValues] = React.useState({\r\n    registrationNumber: \"\",\r\n    model: \"\",\r\n    weightCapacity: 0,\r\n    trunkDimension: \"\",\r\n  });\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      registrationNumber: \"\",\r\n      model: \"\",\r\n      weightCapacity: 0,\r\n      trunkVolume: 0,\r\n    },\r\n    onSubmit: async (values) => {\r\n      console.log(values);\r\n      setShowLoader(false);\r\n      const [, err] = await queryServerApi(\r\n        \"deliveryman/addcd\",\r\n        values,\r\n        \"POST\",\r\n        true\r\n      );\r\n      if (err) {\r\n        setShowLoader(false);\r\n        setError({\r\n          visible: true,\r\n          message: JSON.stringify(err.errors, null, 2),\r\n        });\r\n      } else history.push(\"/Deliverymanview\");\r\n    },\r\n  });\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12} lg={6}>\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <Card className=\"p-4 mb-4\">\r\n              <div className=\"font-size-lg font-weight-bold\">\r\n                Add deliveryman\r\n              </div>\r\n              <Divider className=\"my-4\" />\r\n              <div>\r\n                <FormControl\r\n                  fullWidth\r\n                  className={classes.margin}\r\n                  variant=\"outlined\"\r\n                >\r\n                  <InputLabel htmlFor=\"outlined-adornment-registration-number\">\r\n                    Full name{\" \"}\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-registration-number\"\r\n                    name=\"fullname\"\r\n                    onChange={formik.handleChange}\r\n                    startAdornment={\r\n                      <InputAdornment position=\"start\"></InputAdornment>\r\n                    }\r\n                    labelWidth={130}\r\n                  />\r\n                </FormControl>\r\n                <FormControl\r\n                  fullWidth\r\n                  className={classes.margin}\r\n                  variant=\"outlined\"\r\n                >\r\n                  <InputLabel htmlFor=\"outlined-adornment-model\">\r\n                    username\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-model\"\r\n                    name=\"username\"\r\n                    onChange={formik.handleChange}\r\n                    startAdornment={\r\n                      <InputAdornment position=\"start\"></InputAdornment>\r\n                    }\r\n                    labelWidth={50}\r\n                  />\r\n                </FormControl>\r\n\r\n                <FormControl\r\n                  className={clsx(classes.margin)}\r\n                  variant=\"outlined\"\r\n                >\r\n                  <InputLabel htmlFor=\"outlined-adornment-weight\">\r\n                    email\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-weight\"\r\n                    name=\"email\"\r\n                    onChange={formik.handleChange}\r\n                    startAdornment={\r\n                      <InputAdornment position=\"start\"></InputAdornment>\r\n                    }\r\n                    labelWidth={110}\r\n                  />\r\n                </FormControl>\r\n                <FormControl\r\n                  className={clsx(classes.margin)}\r\n                  variant=\"outlined\"\r\n                >\r\n                  <InputLabel htmlFor=\"outlined-adornment-volume\">\r\n                    password\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-volume\"\r\n                    name=\"password\"\r\n                    onChange={formik.handleChange}\r\n                    labelWidth={90}\r\n                  />\r\n                </FormControl>\r\n                <FormControl\r\n                  className={clsx(classes.margin)}\r\n                  variant=\"outlined\"\r\n                >\r\n                  <InputLabel htmlFor=\"outlined-adornment-volume\">\r\n                    Date of birth\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-volume\"\r\n                    name=\"date\"\r\n                    type=\"date\"\r\n                    onChange={formik.handleChange}\r\n                    labelWidth={90}\r\n                  />\r\n                </FormControl>\r\n                <FormControl\r\n                  className={clsx(classes.margin)}\r\n                  variant=\"outlined\"\r\n                >\r\n                  <InputLabel htmlFor=\"outlined-adornment-volume\">\r\n                    phone nubmer\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-volume\"\r\n                    name=\"phone\"\r\n                    type=\"number\"\r\n                    onChange={formik.handleChange}\r\n                    labelWidth={90}\r\n                  />\r\n                </FormControl>\r\n                <FormControl\r\n                  className={clsx(classes.margin)}\r\n                  variant=\"outlined\"\r\n                >\r\n                  <InputLabel htmlFor=\"outlined-adornment-volume\">\r\n                    address\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-volume\"\r\n                    name=\"address\"\r\n                    type=\"text\"\r\n                    onChange={formik.handleChange}\r\n                    labelWidth={50}\r\n                  />\r\n                </FormControl>\r\n                <div className=\"form-group text_box\">\r\n                  <label className=\"f_p text_c f_400\">\r\n                    {\" \"}\r\n                    <strong>Upload your Profile picture : </strong>\r\n                  </label>\r\n                  <br />\r\n                  <Input\r\n                    id=\"fileinput\"\r\n                    type=\"file\"\r\n                    name=\"img\"\r\n                    onChange={(event) => {\r\n                      formik.setFieldValue(\"img\", event.target.files[0]);\r\n                    }}\r\n                  />\r\n                  {formik.errors.image && formik.touched.image && (\r\n                    <FormHelperText error={formik.errors.image}>\r\n                      {formik.errors.image}\r\n                    </FormHelperText>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <Button\r\n                className=\"m-2 flex-end\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n              >\r\n                Add Vehicule\r\n              </Button>\r\n            </Card>\r\n          </form>\r\n        </Grid>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default LivePreviewExample;\r\n","import React, { Fragment } from \"react\";\r\n\r\nimport { PageTitle } from \"../../layout-componentsBack\";\r\n\r\nimport Form from \"../../components/back/Dm_form\";\r\nexport default function Vehicules() {\r\n  return (\r\n    <Fragment>\r\n      <PageTitle\r\n        titleHeading=\"add a vehicule\"\r\n        titleDescription=\"Specify Vehicule details\"\r\n      />\r\n      <Form\r\n        onSubmit={async (values) => {\r\n          console.log(values);\r\n        }}\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n"],"sourceRoot":""}